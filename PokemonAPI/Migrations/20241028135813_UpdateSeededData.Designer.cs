// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonAPI.Data;

#nullable disable

namespace PokemonAPI.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    [Migration("20241028135813_UpdateSeededData")]
    partial class UpdateSeededData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemonAPI.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Level = 25,
                            Name = "Squirtle",
                            TeamId = 1,
                            TrainerId = 1,
                            Type = "Water"
                        },
                        new
                        {
                            Id = 2,
                            Level = 12,
                            Name = "Charmander",
                            TeamId = 1,
                            TrainerId = 1,
                            Type = "Fire"
                        },
                        new
                        {
                            Id = 3,
                            Level = 7,
                            Name = "Bulbasaur",
                            TeamId = 1,
                            TrainerId = 1,
                            Type = "Grass"
                        },
                        new
                        {
                            Id = 4,
                            Level = 1,
                            Name = "Pikachu",
                            TeamId = 2,
                            TrainerId = 2,
                            Type = "Electric"
                        });
                });

            modelBuilder.Entity("PokemonAPI.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TeamName = "Team Alpha",
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 2,
                            TeamName = "Team Beta",
                            TrainerId = 2
                        });
                });

            modelBuilder.Entity("PokemonAPI.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 29,
                            Name = "Denzel"
                        },
                        new
                        {
                            Id = 2,
                            Age = 8,
                            Name = "Thomas"
                        });
                });

            modelBuilder.Entity("PokemonAPI.Models.Pokemon", b =>
                {
                    b.HasOne("PokemonAPI.Models.Team", "Team")
                        .WithMany("Pokemons")
                        .HasForeignKey("TeamId");

                    b.HasOne("PokemonAPI.Models.Trainer", "Trainer")
                        .WithMany("Pokemons")
                        .HasForeignKey("TrainerId");

                    b.Navigation("Team");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("PokemonAPI.Models.Team", b =>
                {
                    b.HasOne("PokemonAPI.Models.Trainer", "Trainer")
                        .WithMany("Teams")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("PokemonAPI.Models.Team", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("PokemonAPI.Models.Trainer", b =>
                {
                    b.Navigation("Pokemons");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
